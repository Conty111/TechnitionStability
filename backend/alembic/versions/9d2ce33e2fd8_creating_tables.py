"""Creating tables

Revision ID: 9d2ce33e2fd8
Revises: 
Create Date: 2024-06-02 16:50:39.574676

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9d2ce33e2fd8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hardware_types',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('info_system',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('criticality_ratio', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('notes',
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('software_types',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('vendors',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('catalog',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('vendor_id', sa.UUID(), nullable=False),
    sa.Column('support', sa.Boolean(), nullable=False),
    sa.Column('product', sa.Enum('hardware', 'software', name='producttype'), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('virtual_machine',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('monitoring', sa.Boolean(), nullable=False),
    sa.Column('system_id', sa.UUID(), nullable=False),
    sa.Column('srk', sa.Boolean(), nullable=False),
    sa.Column('location', sa.Enum('spb', 'moscow', name='location'), nullable=False),
    sa.Column('cluster', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('cpu_utilization', sa.Float(), nullable=True),
    sa.Column('ram_utilization', sa.Float(), nullable=True),
    sa.Column('disk_mem_utilization', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['system_id'], ['info_system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('hardware',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('monitoring', sa.Boolean(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('hardware_type_id', sa.UUID(), nullable=False),
    sa.Column('location', sa.Enum('spb', 'moscow', name='location'), nullable=False),
    sa.Column('internal_support', sa.Boolean(), nullable=False),
    sa.Column('clusters', sa.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('model', sa.String(length=150), nullable=True),
    sa.Column('ports_count', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('cpu_utilization', sa.Float(), nullable=True),
    sa.Column('ram_utilization', sa.Float(), nullable=True),
    sa.Column('disk_mem_utilization', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['hardware_type_id'], ['hardware_types.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['catalog.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('software',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('software_type_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['catalog.id'], ),
    sa.ForeignKeyConstraint(['software_type_id'], ['software_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('host_software',
    sa.Column('host_id', sa.UUID(), nullable=False),
    sa.Column('software_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['virtual_machine.id'], ),
    sa.ForeignKeyConstraint(['software_id'], ['software.id'], )
    )
    op.create_table('software_hardware',
    sa.Column('hardware_id', sa.UUID(), nullable=False),
    sa.Column('software_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['hardware_id'], ['hardware.id'], ),
    sa.ForeignKeyConstraint(['software_id'], ['software.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('software_hardware')
    op.drop_table('host_software')
    op.drop_table('software')
    op.drop_table('hardware')
    op.drop_table('virtual_machine')
    op.drop_table('catalog')
    op.drop_table('vendors')
    op.drop_table('software_types')
    op.drop_table('notes')
    op.drop_table('info_system')
    op.drop_table('hardware_types')
    # ### end Alembic commands ###
